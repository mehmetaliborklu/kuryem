// Generated by view binder compiler. Do not edit!
package com.info.kuryem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.info.kuryem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView courierName;

  @NonNull
  public final TextView courirerLocation;

  @NonNull
  public final LinearLayout imageLayout;

  @NonNull
  public final LinearLayout infoLayout;

  private CardViewBinding(@NonNull LinearLayout rootView, @NonNull CardView cardView,
      @NonNull TextView courierName, @NonNull TextView courirerLocation,
      @NonNull LinearLayout imageLayout, @NonNull LinearLayout infoLayout) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.courierName = courierName;
    this.courirerLocation = courirerLocation;
    this.imageLayout = imageLayout;
    this.infoLayout = infoLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CardViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.courierName;
      TextView courierName = ViewBindings.findChildViewById(rootView, id);
      if (courierName == null) {
        break missingId;
      }

      id = R.id.courirerLocation;
      TextView courirerLocation = ViewBindings.findChildViewById(rootView, id);
      if (courirerLocation == null) {
        break missingId;
      }

      id = R.id.imageLayout;
      LinearLayout imageLayout = ViewBindings.findChildViewById(rootView, id);
      if (imageLayout == null) {
        break missingId;
      }

      id = R.id.infoLayout;
      LinearLayout infoLayout = ViewBindings.findChildViewById(rootView, id);
      if (infoLayout == null) {
        break missingId;
      }

      return new CardViewBinding((LinearLayout) rootView, cardView, courierName, courirerLocation,
          imageLayout, infoLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

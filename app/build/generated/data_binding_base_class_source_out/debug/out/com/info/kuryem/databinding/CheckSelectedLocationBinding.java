// Generated by view binder compiler. Do not edit!
package com.info.kuryem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.info.kuryem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CheckSelectedLocationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView checkMessage;

  @NonNull
  public final Button checkNo;

  @NonNull
  public final Button checkOkey;

  @NonNull
  public final ImageView dialogImage;

  @NonNull
  public final ConstraintLayout selectedLocationContainer;

  @NonNull
  public final ConstraintLayout selectedLocationLayout;

  @NonNull
  public final TextView selectedLocationTitle;

  private CheckSelectedLocationBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView checkMessage, @NonNull Button checkNo, @NonNull Button checkOkey,
      @NonNull ImageView dialogImage, @NonNull ConstraintLayout selectedLocationContainer,
      @NonNull ConstraintLayout selectedLocationLayout, @NonNull TextView selectedLocationTitle) {
    this.rootView = rootView;
    this.checkMessage = checkMessage;
    this.checkNo = checkNo;
    this.checkOkey = checkOkey;
    this.dialogImage = dialogImage;
    this.selectedLocationContainer = selectedLocationContainer;
    this.selectedLocationLayout = selectedLocationLayout;
    this.selectedLocationTitle = selectedLocationTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CheckSelectedLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CheckSelectedLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.check_selected_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CheckSelectedLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.check_message;
      TextView checkMessage = ViewBindings.findChildViewById(rootView, id);
      if (checkMessage == null) {
        break missingId;
      }

      id = R.id.check_no;
      Button checkNo = ViewBindings.findChildViewById(rootView, id);
      if (checkNo == null) {
        break missingId;
      }

      id = R.id.check_okey;
      Button checkOkey = ViewBindings.findChildViewById(rootView, id);
      if (checkOkey == null) {
        break missingId;
      }

      id = R.id.dialog_image;
      ImageView dialogImage = ViewBindings.findChildViewById(rootView, id);
      if (dialogImage == null) {
        break missingId;
      }

      ConstraintLayout selectedLocationContainer = (ConstraintLayout) rootView;

      id = R.id.selected_location_layout;
      ConstraintLayout selectedLocationLayout = ViewBindings.findChildViewById(rootView, id);
      if (selectedLocationLayout == null) {
        break missingId;
      }

      id = R.id.selected_location_title;
      TextView selectedLocationTitle = ViewBindings.findChildViewById(rootView, id);
      if (selectedLocationTitle == null) {
        break missingId;
      }

      return new CheckSelectedLocationBinding((ConstraintLayout) rootView, checkMessage, checkNo,
          checkOkey, dialogImage, selectedLocationContainer, selectedLocationLayout,
          selectedLocationTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.info.kuryem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.SearchView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.info.kuryem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonIlanVer;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final LinearLayout layoutList;

  @NonNull
  public final LinearLayout layoutSearch;

  @NonNull
  public final FragmentContainerView map;

  @NonNull
  public final RadioButton radioButtonLeft;

  @NonNull
  public final RadioButton radioButtonRight;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final SearchView search;

  private ActivityMapsBinding(@NonNull LinearLayout rootView, @NonNull Button buttonIlanVer,
      @NonNull FrameLayout frameLayout, @NonNull LinearLayout layoutList,
      @NonNull LinearLayout layoutSearch, @NonNull FragmentContainerView map,
      @NonNull RadioButton radioButtonLeft, @NonNull RadioButton radioButtonRight,
      @NonNull RadioGroup radioGroup, @NonNull RecyclerView recyclerView,
      @NonNull SearchView search) {
    this.rootView = rootView;
    this.buttonIlanVer = buttonIlanVer;
    this.frameLayout = frameLayout;
    this.layoutList = layoutList;
    this.layoutSearch = layoutSearch;
    this.map = map;
    this.radioButtonLeft = radioButtonLeft;
    this.radioButtonRight = radioButtonRight;
    this.radioGroup = radioGroup;
    this.recyclerView = recyclerView;
    this.search = search;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_maps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonIlanVer;
      Button buttonIlanVer = ViewBindings.findChildViewById(rootView, id);
      if (buttonIlanVer == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.layout_list;
      LinearLayout layoutList = ViewBindings.findChildViewById(rootView, id);
      if (layoutList == null) {
        break missingId;
      }

      id = R.id.layout_search;
      LinearLayout layoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (layoutSearch == null) {
        break missingId;
      }

      id = R.id.map;
      FragmentContainerView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      id = R.id.radioButtonLeft;
      RadioButton radioButtonLeft = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonLeft == null) {
        break missingId;
      }

      id = R.id.radioButtonRight;
      RadioButton radioButtonRight = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonRight == null) {
        break missingId;
      }

      id = R.id.radioGroup;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.search;
      SearchView search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      return new ActivityMapsBinding((LinearLayout) rootView, buttonIlanVer, frameLayout,
          layoutList, layoutSearch, map, radioButtonLeft, radioButtonRight, radioGroup,
          recyclerView, search);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
